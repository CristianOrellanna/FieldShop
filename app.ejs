const express = require('express'); 
const app = express();
const port = process.env.PORT || 5000;

//urlencoded to capture form data
app.use(express.urlencoded({extended:false}));
app.use(express.json());

//port assignment
app.listen(port, (req, res) =>{
    console.log('Hola!, el servidor esta corriendo en el puerto:',port);
})

//dotenv for environment variables
const dotenv = require('dotenv');
dotenv.config({path:'./env/.env'});

//public directory
app.use('/resources', express.static('public'));
app.use('/resources', express.static(__dirname + '/public'));

//setting as ejs template engine
app.set('view engine', 'ejs');

//routes
app.get('/', (req, res) => {
    res.render('index', {msg: 'Cristian(desde Node)'});
})

app.get('/login', (req, res) => {
    res.render('login');
})

app.get('/register', (req, res) => {
    res.render('register');
})

//register
app.post('/register', async (req, res) =>{
    const user = req.body.user;
    const name = req.body.name;
    const rol = req.body.rol;
    const pass = req.body.pass;
    let passwordHaash = await bcryptjs.hash(pass, 8);
    connection.query('INSERT INTO usuarios SET ?', 
    {user:user, name:name, rol:rol, pass:passwordHaash}, async(error, results) =>{
        if(error){
            console.log(error);
        }else{
            res.send('Funciono!!!')
        }
    })
})

//invoking bcryptjs
const bcryptjs = require('bcryptjs');

//session variable
const session = require('express-session');
app.use(session({
    secret:'secret',
    resave: true,
    saveUninitialized: true
}))

//invoking the db connection module
const connection = require('./database/db');






